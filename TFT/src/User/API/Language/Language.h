#ifndef _LANGUAGE_H_
#define _LANGUAGE_H_

#include "stdbool.h"
#include "variants.h"


enum
{
  ENGLISH = 0,
  CHINESE,
//  RUSSIAN,
  JAPANESE,
  GERMAN,
//  ARMENIAN,
  
  LANGUAGE_NUM,
};

enum
{
  LABEL_BACKGROUND = -1,
  LABEL_LANGUAGE =0 ,
  LABEL_HEAT,
  LABEL_MOVE,
  LABEL_HOME,
  LABEL_PRINT,
  LABEL_EXTRUDE,
  LABEL_FAN,
  LABEL_SETTINGS,
  LABEL_LEVELING,
  LABEL_INC,
  LABEL_DEC,
  LABEL_NOZZLE,
  LABEL_BED,
  LABEL_STOP,
  LABEL_BACK,
  LABEL_PAGE_UP,
  LABEL_PAGE_DOWN,
  LABEL_PAUSE,
  LABEL_RESUME,
  LABEL_LOAD,
  LABEL_UNLOAD,
  LABEL_SLOW_SPEED,
  LABEL_NORMAL_SPEED,
  LABEL_FAST_SPEED,
  LABEL_FAN_FULL_SPEED,
  LABEL_FAN_HALF_SPEED,
  LABEL_POWER_OFF,
  LABEL_TOUCHSCREEN_ADJUST,
  LABEL_SCREEN_INFO,
  LABEL_DISCONNECT,
  LABEL_BAUDRATE_115200,
  LABEL_BAUDRATE_250000,
  LABEL_RUNOUT_OFF,
  LABEL_RUNOUT_ON,
  LABEL_PERCENTAGE,
  LABEL_BABYSTEP,
  LABEL_PERCENTAGE_SPEED,
  LABEL_PERCENTAGE_FLOW,
  LABEL_VALUE_ZERO,
  LABEL_1_DEGREE,
  LABEL_5_DEGREE,
  LABEL_10_DEGREE,
  LABEL_X_INC,
  LABEL_Y_INC,
  LABEL_Z_INC,
  LABEL_X_DEC,
  LABEL_Y_DEC,
  LABEL_Z_DEC,
  LABEL_X_HOME,
  LABEL_Y_HOME,
  LABEL_Z_HOME,
  LABEL_001_MM,
  LABEL_01_MM,
  LABEL_1_MM,
  LABEL_5_MM,
  LABEL_10_MM,
  LABEL_1_PERCENT,
  LABEL_5_PERCENT,
  LABEL_10_PERCENT,
  
  LABEL_READY,
  LABEL_PRINTING,
  LABEL_BUSY,
  LABEL_UNCONNECTED,
  LABEL_DISCONNECT_INFO,
  LABEL_LOADING,
  LABEL_POWER_FAILED,
  LABEL_CONTINUE,
  LABEL_CANNEL,
  LABEL_ADJUST_TITLE,
  LABEL_ADJUST_INFO,
  LABEL_ADJUST_OK,
  LABEL_ADJUST_FAILED,
  LABEL_WARNING,
  LABEL_STOP_PRINT,
  LABEL_CONFIRM,
  
  LABEL_TFTSD,
  LABEL_READ_TFTSD_ERROR,
  LABEL_TFTSD_INSERTED,
  LABEL_TFTSD_REMOVED,
  LABEL_U_DISK,
  LABEL_READ_U_DISK_ERROR,
  LABEL_U_DISK_INSERTED,
  LABEL_U_DISK_REMOVED,
  LABEL_ONBOARDSD,
  LABEL_READ_ONBOARDSD_ERROR,
  
  LABEL_FILAMENT_RUNOUT,
  
  LABEL_NUM,
};



bool isRussia(const u8 *const str);
bool isArmenian(const u8 *const str);
u16 my_strlen(const u8 *const str);
u8 * textSelect(u8 sel);

#endif

