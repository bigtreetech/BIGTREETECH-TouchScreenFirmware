;//TG MODIFIED BY T.GIOIOSA
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;BIGTREE_TFT35_V1_0
;BIGTREE_TFT35_V1_1
;BIGTREE_TFT35_V1_2
;BIGTREE_TFT35_V2_0
;BIGTREE_TFT35_V3_0
;BIGTREE_TFT35_E3_V3_0
;BIGTREE_TFT35_B1_V3_0
;BIGTREE_TFT43_V3_0
;BIGTREE_TFT50_V3_0
;BIGTREE_TFT70_V3_0
;BIGTREE_TFT28_V1_0
;BIGTREE_TFT28_V3_0
;BIGTREE_TFT24_V1_1
;MKS_32_V1_4
;MKS_32_V1_4_NOBL
;MKS_28_V1_0
[platformio]
src_dir = TFT
boards_dir = buildroot\boards
;Build only Target - BIGTREE_TFT35_V3_0
default_envs = BIGTREE_TFT35_V3_0 DEBUG
;Build all Targets
;default_envs = BIGTREE_TFT35_V1_0, BIGTREE_TFT35_V1_1, BIGTREE_TFT35_V1_2, BIGTREE_TFT35_V2_0, BIGTREE_TFT35_V3_0, BIGTREE_TFT35_E3_V3_0, BIGTREE_TFT35_B1_V3_0, BIGTREE_TFT43_V3_0, BIGTREE_TFT50_V3_0, BIGTREE_TFT70_V3_0, BIGTREE_TFT28_V1_0, BIGTREE_TFT28_V3_0, BIGTREE_TFT24_V1_1, MKS_32_V1_4, MKS_32_V1_4_NOBL, MKS_28_V1_0

[common]
default_src_filter = +<src/*> -<src/Libraries> -<src/User/Hal/stm32f10x> +<src/User/Hal/stm32f2_f4xx> +<src/User/Menu/heat.*>
build_flags = -fmax-errors=5
;    -g
;    -ggdb
	-Wno-missing-braces
	-DUSE_STDPERIPH_DRIVER=
	-ITFT/src/User/Fatfs
	-ITFT/src/User/Hal
	-ITFT/src/User/Menu
	-ITFT/src/User/Variants
	-ITFT/src/User
	-ITFT/src/User/API
	-ITFT/src/User/API/UI
	-ITFT/src/User/API/Gcode
	-ITFT/src/User/API/Language
	-ITFT/src/User/API/Vfs
	-ITFT/src/User/Hal
	-ITFT/src/User/Hal/STM32_USB_HOST_Library/Core/inc
	-ITFT/src/User/Hal/STM32_USB_HOST_Library/Class/MSC/inc
	-ITFT/src/User/Hal/STM32_USB_HOST_Library/Usr/inc
	-ITFT/src/User/Hal/STM32_USB_OTG_Driver/inc
	-DSOFTWARE_VERSION=27
	-DSOFTWARE_VERSION_SHORT=27
extra_scripts = 
	pre:buildroot/scripts/custom_filename.py
	post:buildroot/scripts/short_out_filename.py
	post:buildroot/scripts/auto_gen_language_pack.py	# uncomment if new language ini files needed
	#post:buildroot/scripts/auto_copy_firmware.py 		# uncomment here when a new .bin firmware needs to be released

[stm32f10x]
default_src_filter = ${common.default_src_filter} +<src/Libraries/cmsis/stm32f10x> +<src/Libraries/fwlib/stm32f10x> +<src/User/Hal/stm32f10x>
build_flags = ${common.build_flags}
              -D__STATIC_INLINE=
              -ITFT/src/Libraries/cmsis/Core-CM3
              -ITFT/src/Libraries/cmsis/stm32f10x
              -ITFT/src/Libraries/fwlib/stm32f10x
              -ITFT/src/Libraries/fwlib/stm32f10x/inc
              -ITFT/src/User/Hal/stm32f10x
[stm32f2xx]
default_src_filter = ${common.default_src_filter} +<src/Libraries/cmsis/stm32f2xx> +<src/Libraries/fwlib/stm32f2xx> +<src/User/Hal/stm32f2_f4xx>
build_flags = ${common.build_flags}
	-D__STATIC_INLINE=
	-ITFT/src/Libraries/cmsis/Core-CM3
	-ITFT/src/Libraries/cmsis/stm32f2xx
	-ITFT/src/Libraries/fwlib/stm32f2xx
	-ITFT/src/Libraries/fwlib/stm32f2xx/inc
	-ITFT/src/User/Hal/stm32f2_f4xx
[stm32f4xx]
default_src_filter = ${common.default_src_filter} +<src/Libraries/cmsis/stm32f4xx> +<src/Libraries/fwlib/stm32f4xx> +<src/User/Hal/stm32f2_f4xx>
build_flags = ${common.build_flags}
              -ITFT/src/Libraries/cmsis/Core-CM4
              -ITFT/src/Libraries/cmsis/stm32f4xx
              -ITFT/src/Libraries/fwlib/stm32f4xx
              -ITFT/src/Libraries/fwlib/stm32f4xx/inc
              -ITFT/src/User/Hal/stm32f2_f4xx


#
# BIGTREE TFT35 V3.0
#
[env:BIGTREE_TFT35_V3_0 RELEASE]
build_type = release
platform = ststm32@11.0.0
framework = cmsis
board = btt_tft35_v3
src_filter = ${stm32f2xx.default_src_filter} -<src/Libraries/Startup/stm32f2xx>
  +<src/User/Menu/Pid.c>
build_flags = 
	-O1
	-g0
	-ggdb
	${stm32f2xx.build_flags}
	-DSTM32F2XX=
	-DHSE_VALUE=8000000ul
	-DVECT_TAB_FLASH=0x08008000
	-DRAM_SIZE=48
	-DHARDWARE="BIGTREE_TFT35_V3.0"
	-DHARDWARE_SHORT="B35V30"
	-DTFT35_V3_0=
extra_scripts = 
	${common.extra_scripts}
	buildroot/scripts/stm32f2xxxC_0x8000_iap.py
	#post:buildroot/scripts/noext2elf.py      # not really needed as .elf is produced by compiler
	TGExtra\MY_STM32F207_helper.py            # sets upload_flags correctly into upload command

upload_protocol= custom  # for LPC17xx use custom, cmsis-dap inserts an extra "-t, lpc1768" to upload_flags, causing errors
# strange, the arguments to command below must all be on the same line, unlike the debug_server =, (or put args in upload_flags)
upload_command = $PROJECT_PACKAGES_DIR\tool-openocd\bin\openocd
upload_flags =
  -c
  set FIRMWARENAME {$PROJECT_DIR\$SOURCE}   # for upload, $SOURCE seems to be available as output filename
  -c
  set CALLER UPLOAD                       # so that all cfg files know who called them
  -c 
  set LOADADDRESS 0x08008000              # MAKE SURE TO SET THIS CORRECTLY!!!!!  For now STM32 parts must start at 0x08008000
  -c
  set PROGRAMMER STLINK                   # tell MY_LPC1769.cfg whether to use STLink or MCULink interface
  -c
  set PROG_DEVICE  STLINK_BLACK           # tell MY_LPC1769.cfg which device (STLINK_DISCO, STLINK_BLACK, STLINK_COPPER) 
  -f 
 $PROJECT_PACKAGES_DIR\tool-openocd\scripts\board\MY_STM32F207.cfg 

[env:BIGTREE_TFT35_V3_0 DEBUG]
build_type = debug
debug_load_mode = modified	;or modified or manual
debug_init_break =
debug_tool = custom                       # for STM32F207
debug_port = localhost:3335               # where GDB connects to OpenOCD
debug_server = $PLATFORMIO_CORE_DIR/packages/tool-openocd/bin/openocd
     -c 
     gdb_port 3335
	 -c 
	 tcl_port disabled
	 -c 
	 telnet_port disabled 
     -c
     set CALLER DEBUG                     # so that all cfg files know who called them
     -c         
     set LOADADDRESS 0x08008000           # MAKE SURE TO SET THIS CORRECTLY!!!!!
     -c       
     set FIRMWARENAME {$PROG_PATH}        # for debug, use $PROG_PATH ($SOURCE is not available) for output filename
     -c
     set PROGRAMMER STLINK                # tell openocd whether to use STLink or MCULink interface
     -c
     set PROG_DEVICE  STLINK_BLACK       # tell openocd which device (STLINK_DISCO, STLINK_BLACK, STLINK_COPPER) 
     -f 
	 $PLATFORMIO_CORE_DIR/packages\tool-openocd\scripts\board\MY_STM32F207.cfg
debug_build_flags = -O1 -g3 -ggdb3
debug_init_cmds =
  define pio_reset_halt_target
      monitor reset
      monitor halt
  end
  define pio_reset_run_target
      monitor reset
  end
  define pio_restart_target
      pio_reset_halt_target
	  next
  end
  target extended-remote $DEBUG_PORT #| $PLATFORMIO_CORE_DIR/packages/tool-openocd/bin/openocd.exe -s "C:/Users/tony/.platformio/packages/tool-openocd" -c "gdb_port pipe; tcl_port disabled; telnet_port disabled" -s "C:/Users/tony/.platformio/packages/tool-openocd/scripts" -f "C:/Users/tony/Documents/CNC/LCD/TG-BTT-TouchScreenFirmware-mpcnc/TGextra/MY_Target_Remote.cfg" -f "interface/stlink.cfg" -c "transport select hla_swd" -f "board/MY_STM32F207.cfg"
  $INIT_BREAK                             # GDB commands this sends whatever is in (debug_init_break = )
  $LOAD_CMDS                              # GDB commands this sends whatever is in (debug_load_cmds = )
debug_load_cmds = load
debug_extra_cmds =
	set remotetimeout 5000
	show remotetimeout
platform = ststm32@11.0.0
framework = cmsis
board = btt_tft35_v3
src_filter = ${stm32f2xx.default_src_filter} -<src/Libraries/Startup/stm32f2xx>
  -<$PROJECT_DIR/TFT/removed/*>
build_flags = 
	-O1
	-g3
	-ggdb
	${stm32f2xx.build_flags}
	-DSTM32F2XX=
	-DHSE_VALUE=8000000ul
	-DVECT_TAB_FLASH=0x08008000
	-DRAM_SIZE=48
	-DHARDWARE="BIGTREE_TFT35_V3.0"
	-DHARDWARE_SHORT="B35V30"
	-DTFT35_V3_0=
extra_scripts =
    ${common.extra_scripts} 
	pre:buildroot/scripts/custom_filename.py
	buildroot/scripts/stm32f2xxxC_0x8000_iap.py
	#post:buildroot/scripts/noext2elf.py        # not really needed as .elf is produced by compiler
    TGExtra\MY_STM32F207_helper.py            # sets upload_flags correctly into upload command
upload_protocol= custom  # for LPC17xx use custom, cmsis-dap inserts an extra "-t, lpc1768" to upload_flags, causing errors
# strange, the arguments to command below must all be on the same line, unlike the debug_server =, (or put args in upload_flags)
upload_command = $PROJECT_PACKAGES_DIR\tool-openocd\bin\openocd
upload_flags =
  -c
  set FIRMWARENAME {$PROJECT_DIR\$SOURCE}   # for upload, $SOURCE seems to be available as output filename
  -c
  set CALLER UPLOAD                       # so that all cfg files know who called them
  -c 
  set LOADADDRESS 0x08008000              # MAKE SURE TO SET THIS CORRECTLY!!!!!  For now STM32 parts must start at 0x08008000
  -c
  set PROGRAMMER STLINK                   # tell MY_LPC1769.cfg whether to use STLink or MCULink interface
  -c
  set PROG_DEVICE  STLINK_BLACK           # tell MY_LPC1769.cfg which device (STLINK_DISCO, STLINK_BLACK, STLINK_COPPER) 
  -f 
 $PROJECT_PACKAGES_DIR\tool-openocd\scripts\board\MY_STM32F207.cfg 



#
# BIGTREE TFT35 V1.0
#
[env:BIGTREE_TFT35_V1_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F103VC_0x6000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_hd>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f103xC_0x6000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_HD=
  -DHSE_VALUE=16000000ul
  -DVECT_TAB_FLASH=0x08006000
  -DRAM_SIZE=48  ; Available RAM size in kbytes
  -DHARDWARE="BIQU_TFT35_V1.0"
  -DHARDWARE_SHORT="B35V10"
  -DTFT35_V1_0="B35V10"

#
# BIGTREE TFT35 V1.1
#
[env:BIGTREE_TFT35_V1_1]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F103VC_0x6000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_hd>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f103xC_0x6000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_HD=
  -DHSE_VALUE=16000000ul
  -DVECT_TAB_FLASH=0x08006000
  -DRAM_SIZE=48  ; Available RAM size in kbytes
  -DHARDWARE="BIQU_TFT35_V1.1"
  -DHARDWARE_SHORT="B35V11"
  -DTFT35_V1_1=

#
# BIGTREE TFT35 V1.2
#
[env:BIGTREE_TFT35_V1_2]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F103VC_0x6000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_hd>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f103xC_0x6000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_HD=
  -DHSE_VALUE=16000000ul
  -DVECT_TAB_FLASH=0x08006000
  -DRAM_SIZE=48  ; Available RAM size in kbytes
  -DHARDWARE="BIQU_TFT35_V1.2"
  -DHARDWARE_SHORT="B35V12"
  -DTFT35_V1_2=

#
# BIGTREE TFT35 V2.0
#
[env:BIGTREE_TFT35_V2_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F103VC_0x3000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_hd>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f103xC_0x3000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_HD=
  -DHSE_VALUE=16000000ul
  -DVECT_TAB_FLASH=0x08003000
  -DRAM_SIZE=48  ; Available RAM size in kbytes
  -DHARDWARE="BIQU_TFT35_APP1_V2.0"
  -DHARDWARE_SHORT="B35V20"
  -DTFT35_V2_0=
monitor_speed = 250000

#
# BIGTREE TFT35 E3 V3.0
#
[env:BIGTREE_TFT35_E3_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F207VC_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f2xx.default_src_filter} +<src/Libraries/Startup/stm32f2xx>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f2xxxC_0x8000_iap.py
build_flags   = ${stm32f2xx.build_flags}
  -DSTM32F2XX=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=96  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT35_V3.0_E3"
  -DHARDWARE_SHORT="35V3E3"
  -DTFT35_E3_V3_0=

#
# BIGTREE TFT35 B1 V3.0
#
[env:BIGTREE_TFT35_B1_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F207VC_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f2xx.default_src_filter} +<src/Libraries/Startup/stm32f2xx>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f2xxxC_0x8000_iap.py
build_flags   = ${stm32f2xx.build_flags}
  -DSTM32F2XX=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=96  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT35_V3.0_B1"
  -DHARDWARE_SHORT="35V3B1"
  -DTFT35_B1_V3_0=

#
# BIGTREE TFT43 V3.0
#
[env:BIGTREE_TFT43_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F207VC_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f2xx.default_src_filter} +<src/Libraries/Startup/stm32f2xx>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f2xxxC_0x8000_iap.py
build_flags   = ${stm32f2xx.build_flags}
  -DSTM32F2XX=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=96  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT43_V3.0"
  -DHARDWARE_SHORT="B43V30"
  -DTFT43_V3_0=

#
# BIGTREE TFT50 V3.0
#
[env:BIGTREE_TFT50_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F207VC_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f2xx.default_src_filter} +<src/Libraries/Startup/stm32f2xx>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f2xxxC_0x8000_iap.py
build_flags   = ${stm32f2xx.build_flags}
  -DSTM32F2XX=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=96  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT50_V3.0"
  -DHARDWARE_SHORT="B50V30"
  -DTFT50_V3_0=

#
# BIGTREE TFT70 V3.0
#
[env:BIGTREE_TFT70_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F407VG_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f4xx.default_src_filter} +<src/Libraries/Startup/stm32f40_41x>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f4xxxG_0x8000_iap.py
build_flags   = ${stm32f4xx.build_flags}
  -DSTM32F40_41xxx=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=192  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT70_V3.0"
  -DHARDWARE_SHORT="B70V30"
  -DTFT70_V3_0=

#
# BIGTREE TFT28 V1.0
#
[env:BIGTREE_TFT28_V1_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F103VC_0x6000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_hd>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f103xC_0x6000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_HD=
  -DHSE_VALUE=16000000ul
  -DVECT_TAB_FLASH=0x08006000
  -DRAM_SIZE=48  ; Available RAM size in kbytes
  -DHARDWARE="BIQU_TFT28_V1.0"
  -DHARDWARE_SHORT="B28V10"
  -DTFT28_V1_0=

#
# BIGTREE TFT28 V3.0
#
[env:BIGTREE_TFT28_V3_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F207VC_0x8000
upload_protocol = cmsis-dap
src_filter    = ${stm32f2xx.default_src_filter} +<src/Libraries/Startup/stm32f2xx>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f2xxxC_0x8000_iap.py
build_flags   = ${stm32f2xx.build_flags}
  -DSTM32F2XX=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08008000
  -DRAM_SIZE=96  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT28_V3.0"
  -DHARDWARE_SHORT="B28V30"
  -DTFT28_V3_0=

#
# BIGTREE TFT24 V1.1
#
[env:BIGTREE_TFT24_V1_1]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F105RC_0x6000
upload_protocol = cmsis-dap
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_cl>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f105xC_0x6000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_CL=
  -DHSE_VALUE=8000000ul
  -DVECT_TAB_FLASH=0x08006000
  -DRAM_SIZE=64  ; Available RAM size in kbytes
  -DHARDWARE="BIGTREE_TFT24_V1.1"
  -DHARDWARE_SHORT="B24V11"
  -DTFT24_V1_1=

#
# MKS TFT32 V1.4
#
[env:MKS_32_V1_4]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F107VC_0x7000
upload_protocol = stlink
debug_tool = stlink
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_cl>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f107xC_0x7000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_CL=
  -DHSE_VALUE=25000000ul
  -DVECT_TAB_FLASH=0x08007000
  -DRAM_SIZE=64  ; Available RAM size in kbytes
  -DHARDWARE="MKS_32_V1_4"
  -DHARDWARE_SHORT="M32V14"
  -DMKS_32_V1_4=

#
# MKS TFT32 V1.4 No Bootloader
#
[env:MKS_32_V1_4_NOBL]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F107VC_0x0000
upload_protocol = stlink
debug_tool = stlink
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_cl>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f107xC_0x0000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_CL=
  -DHSE_VALUE=25000000ul
  -DVECT_TAB_FLASH=0x08000000
  -DRAM_SIZE=64  ; Available RAM size in kbytes
  -DHARDWARE="MKS_32_V1_4"
  -DHARDWARE_SHORT="M32V14"
  -DMKS_32_V1_4=
  -DMKS_32_V1_4_NOBL=

#
# MKS TFT28 V1.0
#
[env:MKS_28_V1_0]
platform      = ststm32@9.0.0
framework     = cmsis
board         = STM32F107VC_0x7000
upload_protocol = stlink
debug_tool = stlink
src_filter    = ${stm32f10x.default_src_filter} +<src/Libraries/Startup/stm32f10x_cl>
extra_scripts = ${common.extra_scripts}
                buildroot/scripts/stm32f107xC_0x7000_iap.py
build_flags   = ${stm32f10x.build_flags}
  -DSTM32F10X_CL=
  -DHSE_VALUE=25000000ul
  -DVECT_TAB_FLASH=0x08007000
  -DRAM_SIZE=64  ; Available RAM size in kbytes
  -DHARDWARE="MKS_28_V1_0"
  -DHARDWARE_SHORT="M28V10"
  -DMKS_28_V1_0=

